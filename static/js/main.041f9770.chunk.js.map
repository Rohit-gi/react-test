{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","react_router_dom","StrictMode","src_App"],"mappings":"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","file":"static/js/main.041f9770.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n    >\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">\n          {props.title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                Home\n              </Link> */}\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                Home\n              </a>\n              \n            </li>\n            {/* <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">\n                {props.aboutText}\n              </Link>\n            </li> */}\n          </ul>\n          {/* <form className=\"d-flex\">\n            <input\n              className=\"form-control me-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <button className=\"btn btn-primary\" type=\"submit\">\n              Search\n            </button>\n          </form> */}\n          <div className={`form-check form-switch text-${props.mode}`}>\n            <input\n              className=\"form-check-input\"\n              onClick={props.toggleMode}\n              type=\"checkbox\"\n              role=\"switch\"\n              aria-checked=\"false\"\n              id=\"flexSwitchCheckDefault\"\n            />\n            <label\n              className=\"form-check-label\"\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Enable Dark Mode\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  aboutText: PropTypes.string.isRequired,\n};\n\nNavbar.defaultProps = {\n  title: \"Set title here\",\n  aboutText: \"About\",\n};\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const [text, setText] = useState(\"\");\n\n  const handleUpClick = () => {\n    console.log(\"Uppercase was clicked\");\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to uppercase!\", \"success\");\n  };\n\n  const handleLoClick = () => {\n    console.log(\"Lowercase was clicked\");\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to lowercase!\", \"success\");\n  };\n\n  const handleclearClick = () => {\n    console.log(\"Lowercase was clicked\");\n    let newText = \"\";\n    setText(newText);\n    props.showAlert(\"Text cleared!\", \"success\");\n  };\n\n  const handleOnChange = (event) => {\n    console.log(\"On change\");\n    setText(event.target.value);\n  };\n\n  return (\n    <>\n      <div\n        className=\"container\"\n        style={{color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\n      >\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            value={text}\n            onChange={handleOnChange}\n            style={{\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\"\n            }}\n            id=\"myBox\"\n            rows=\"8\"\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\n          Convert to Uppercase\n        </button>\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>\n          Convert to Lowercase\n        </button>\n        <button className=\"btn btn-primary mx-2\" onClick={handleclearClick}>\n          Clear data\n        </button>\n      </div>\n      <div className=\"container my-3\" style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}>\n        <h2>Your text summary</h2>\n        <p>\n          {text.split(\" \").length} words and {text.length} characters\n        </p>\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\n        <h2>Preview</h2>\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nfunction Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\n    }\n  return (\n    props.alert && (\n      <div\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n        role=\"alert\"\n      >\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n        \n      </div>\n    )\n  );\n}\n\nexport default Alert;\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //wheteher dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1800);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\" Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\" Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n             {/* <Route exact path=\"/\"> */}\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze below\"\n                mode={mode}\n              />\n            {/* </Route> */}\n\n            {/* <Route exact path=\"/about\">\n              <About /> */}\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n     {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}